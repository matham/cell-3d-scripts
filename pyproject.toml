[project]
name = "cell-3d-scripts"
dynamic = ["version"]
description = "Scripts for processing Brainglobe cells."
readme = "README.md"
license = {file = "LICENSE"}
authors = [
  {name = "Matthew Einhorn"},
  {email = "matt@einhorn.dev"},
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Image Processing",
]
requires-python = ">=3.10"
dependencies = [
    "numpy",
    "brainglobe-utils",
    "fancylog",
    "zarr",
    "tqdm",
    "pydeseq2",
]

[project.urls]
"Bug Tracker" = "https://github.com/matham/cell-3d-scripts/issues"
"Documentation" = "https://github.com/matham/cell-3d-scripts#README.md"
"Source Code" = "https://github.com/matham/cell-3d-scripts"
"User Support" = "https://github.com/matham/cell-3d-scripts/issues"

[project.scripts]
cell_3d_locate_cells = "cell_3d_scripts.locate_cells:run_main"
cell_3d_summarize_regions = "cell_3d_scripts.summarize_regions:run_main"
cell_3d_filter_cells = "cell_3d_scripts.filter_cells:run_main"
cell_3d_collate_summaries = "cell_3d_scripts.collate_csv_summaries:run_main"
cell_3d_analyze_summaries = "cell_3d_scripts.analyze_csv_summaries:run_main"

[build-system]
requires = ["setuptools>=42.0.0", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]

[tool.setuptools.package-data]
"*" = ["*.yaml"]


[tool.setuptools_scm]
write_to = "cell_3d_scripts/_version.py"
fallback_version = "0.0.1+nogit"


[tool.black]
line-length = 120
target-version = ['py310', 'py311', 'py312', 'py313']

[tool.ruff]
line-length = 120
lint.select = [
    "E", "F", "W", #flake8
    "UP", # pyupgrade
    "I", # isort
    "BLE", # flake8-blind-exception
    "B", # flake8-bugbear
    "A", # flake8-builtins
    "C4", # flake8-comprehensions
    "ISC", # flake8-implicit-str-concat
    "G", # flake8-logging-format
    "PIE", # flake8-pie
    "SIM", # flake8-simplify
]
lint.ignore = [
    "UP006", "UP007", # type annotation. As using magicgui require runtime type annotation then we disable this.
    "SIM117", # flake8-simplify - some of merged with statements are not looking great with black, reanble after drop python 3.9
    "G004",  # don't care about f-strings
    "B007",
    "SIM108",
    "SIM102",
]

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".mypy_cache",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*vendored*",
    "*_vendor*",
]

target-version = "py310"
fix = true
